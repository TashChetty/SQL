-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.my_contacts
(
    contact_id bigserial NOT NULL,
    last_name character varying(50) NOT NULL,
    first_name character varying(50) NOT NULL,
    phone integer NOT NULL,
    email character varying(50) NOT NULL,
    gender character(1) NOT NULL,
    birthday character varying(50) NOT NULL,
    prof_id bigint NOT NULL,
    zip_code bigint NOT NULL,
    status_id bigint NOT NULL,
    PRIMARY KEY (contact_id)
);

CREATE TABLE IF NOT EXISTS public.status
(
    status_id bigserial NOT NULL,
    status character varying(50) NOT NULL,
    PRIMARY KEY (status_id)
);

CREATE TABLE IF NOT EXISTS public.zip_code
(
    zip_code bigint NOT NULL CHECK (zip_code >=1111 AND zip_code <=9999), 
    city character varying(50) NOT NULL,
    province character varying(50) NOT NULL,
    PRIMARY KEY (zip_code)
);

CREATE TABLE IF NOT EXISTS public.profession
(
    prof_id bigserial NOT NULL,
    profession character varying(50) NOT NULL,
    CONSTRAINT prof_id UNIQUE (prof_id)
);

CREATE TABLE IF NOT EXISTS public.seeking
(
    seeking_id bigserial NOT NULL,
    seeking character varying(50) NOT NULL,
    PRIMARY KEY (seeking_id)
);

CREATE TABLE IF NOT EXISTS public.interests
(
    interest_id bigserial NOT NULL,
    interest character varying(100) NOT NULL,
    PRIMARY KEY (interest_id)
);

CREATE TABLE IF NOT EXISTS public.contact_seeking
(
    contact_id bigint NOT NULL,
    seeking_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.contact_interest
(
    contact_id bigint NOT NULL,
    interest_id bigint NOT NULL
);

ALTER TABLE IF EXISTS public.my_contacts
    ADD FOREIGN KEY (prof_id)
    REFERENCES public.profession (prof_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.my_contacts
    ADD FOREIGN KEY (zip_code)
    REFERENCES public.zip_code (zip_code) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.my_contacts
    ADD FOREIGN KEY (status_id)
    REFERENCES public.status (status_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD FOREIGN KEY (contact_id)
    REFERENCES public.my_contacts (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD FOREIGN KEY (seeking_id)
    REFERENCES public.seeking (seeking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD FOREIGN KEY (contact_id)
    REFERENCES public.my_contacts (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD FOREIGN KEY (interest_id)
    REFERENCES public.interests (interest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

--Insert into Status
INSERT INTO status (status)
VALUES ('Single'),
        ('Married'),
        ('Divorced'),
         ('Widowed'),
         ('Its Complicated'),
         ('Blesser');
         
SELECT * FROM status;

--Insert into zip_code
INSERT INTO zip_code (zip_code, city, province)
VALUES (4000,'Durban', 'KZN'),
        (3900,'Richards Bay', 'KZN'),
        (7100,'Cape Town', 'Western Cape'),
        (6530,'George', 'Western Cape'),
        (4181,'Tshwane', 'Gauteng'),
        (2000,'Johannesburg', 'Gauteng');
        
SELECT * FROM zip_code;

--Insert into profession
INSERT INTO profession (profession)
VALUES  ('Doctor'),
        ('Software Developer'),
        ('Teacher'),
        ('Pilot'),
        ('Minister of Parliament'),
        ('Taxi Owner');
        
SELECT * FROM profession;

--Insert into Seeking
INSERT INTO seeking (seeking)
VALUES ('Male'),
        ('Female'),
         ('Transgender'),
        ('Bisexual'),
        ('Pansexual'),
        ('Genderfluid');
        
SELECT * FROM seeking;

--Insert into interests
INSERT INTO interests (interest)
VALUES ('Cooking'),
        ('Jazz'),
        ('Travel'),
        ('Dogs'),
        ('Gaming'),
        ('Dancing');
       
        
SELECT * FROM interests;

--iNSERT INTO my_contacts

INSERT INTO my_contacts (last_name, first_name, phone, email, gender, birthday, prof_id, zip_code, status_id )
VALUES ('Doe', 'Jane',0815786645, 'jane@pretend.com', 'F', '31 January 1999', 1, 4001 , 1),
        ('Black', 'Jack',0825783345, 'jack@pretend.com', 'M', '22 February 2007', 2,3900,2),
        ('Figg', 'Dylan',0845686645, 'dylan@pretend.com', 'M', '13 March 2003',3,7100,3),
        ('Potts', 'Morgan',0832516645, 'morgan@pretend.com', 'F', '08 April 2001',4,6530,4),
        ('Drake', 'Dee',0815783792, 'dee@pretend.com', 'M', '27 May 1987', 5,4181,5),
        ('Scott', 'Riley',0842786673, 'riley@pretend.com', 'M', '16 June 1992',6,2000,6);

SELECT * FROM my_contacts;

--Insert contact_interest
INSERT INTO contact_interest (contact_id, interest_id)
VALUES (1,1),
        (1,2),
        (2,1),
        (2,2),
        (3,1),
        (3,2),
        (4,1),
        (4,2),
        (5,1),
        (5,2),
        (6,1),
        (6,2);
        
SELECT * FROM contact_interest;

--Insert into Contact seeking
INSERT INTO contact_seeking (contact_id, seeking_id)
VALUES (1,1),
        (2,2),
        (3,3),
        (4,4),
        (5,5),
        (6,6);
        
SELECT * FROM contact_seeking;

--Join
SELECT 
mc.last_name,
mc.first_name,
mc.phone,
mc.email,
mc.gender,
mc.birthday,
pr.profession,
z.city,
z.zip_code,
s.status,
seeking.seeking,
interests.interest

FROM my_contacts AS mc


INNER JOIN status AS s
ON mc.status_id = s.status_id

INNER JOIN zip_code AS z
ON mc.zip_code = z.zip_code

INNER JOIN profession AS pr
ON mc.prof_id = pr.prof_id
--INTERESTS INNER JOIN
INNER JOIN contact_interest
ON mc.contact_id = contact_interest.contact_id

INNER JOIN interests
ON contact_interest.interest_id = interests.interest_id

--SEEKING INNER JOIN
INNER JOIN contact_seeking
ON mc.contact_id = contact_seeking.contact_id

INNER JOIN seeking 
ON contact_seeking.seeking_id = seeking.seeking_id;

END;
